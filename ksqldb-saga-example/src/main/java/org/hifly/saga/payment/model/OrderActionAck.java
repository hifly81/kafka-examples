/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.hifly.saga.payment.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OrderActionAck extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6570837907373093879L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderActionAck\",\"namespace\":\"org.hifly.saga.payment.model\",\"fields\":[{\"name\":\"TX_ID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PARTICIPIANT_ID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ORDER_ID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"TIMESTAMP\",\"type\":[\"null\",\"string\"],\"default\":null}],\"connect.name\":\"org.hifly.saga.payment.model.OrderActionAck\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderActionAck> ENCODER =
      new BinaryMessageEncoder<OrderActionAck>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderActionAck> DECODER =
      new BinaryMessageDecoder<OrderActionAck>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrderActionAck> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrderActionAck> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrderActionAck> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderActionAck>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrderActionAck to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrderActionAck from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrderActionAck instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrderActionAck fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence TX_ID;
  @Deprecated public java.lang.CharSequence PARTICIPIANT_ID;
  @Deprecated public java.lang.CharSequence ORDER_ID;
  @Deprecated public java.lang.CharSequence TIMESTAMP;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderActionAck() {}

  /**
   * All-args constructor.
   * @param TX_ID The new value for TX_ID
   * @param PARTICIPIANT_ID The new value for PARTICIPIANT_ID
   * @param ORDER_ID The new value for ORDER_ID
   * @param TIMESTAMP The new value for TIMESTAMP
   */
  public OrderActionAck(java.lang.CharSequence TX_ID, java.lang.CharSequence PARTICIPIANT_ID, java.lang.CharSequence ORDER_ID, java.lang.CharSequence TIMESTAMP) {
    this.TX_ID = TX_ID;
    this.PARTICIPIANT_ID = PARTICIPIANT_ID;
    this.ORDER_ID = ORDER_ID;
    this.TIMESTAMP = TIMESTAMP;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return TX_ID;
    case 1: return PARTICIPIANT_ID;
    case 2: return ORDER_ID;
    case 3: return TIMESTAMP;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: TX_ID = (java.lang.CharSequence)value$; break;
    case 1: PARTICIPIANT_ID = (java.lang.CharSequence)value$; break;
    case 2: ORDER_ID = (java.lang.CharSequence)value$; break;
    case 3: TIMESTAMP = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'TX_ID' field.
   * @return The value of the 'TX_ID' field.
   */
  public java.lang.CharSequence getTXID() {
    return TX_ID;
  }


  /**
   * Sets the value of the 'TX_ID' field.
   * @param value the value to set.
   */
  public void setTXID(java.lang.CharSequence value) {
    this.TX_ID = value;
  }

  /**
   * Gets the value of the 'PARTICIPIANT_ID' field.
   * @return The value of the 'PARTICIPIANT_ID' field.
   */
  public java.lang.CharSequence getPARTICIPIANTID() {
    return PARTICIPIANT_ID;
  }


  /**
   * Sets the value of the 'PARTICIPIANT_ID' field.
   * @param value the value to set.
   */
  public void setPARTICIPIANTID(java.lang.CharSequence value) {
    this.PARTICIPIANT_ID = value;
  }

  /**
   * Gets the value of the 'ORDER_ID' field.
   * @return The value of the 'ORDER_ID' field.
   */
  public java.lang.CharSequence getORDERID() {
    return ORDER_ID;
  }


  /**
   * Sets the value of the 'ORDER_ID' field.
   * @param value the value to set.
   */
  public void setORDERID(java.lang.CharSequence value) {
    this.ORDER_ID = value;
  }

  /**
   * Gets the value of the 'TIMESTAMP' field.
   * @return The value of the 'TIMESTAMP' field.
   */
  public java.lang.CharSequence getTIMESTAMP() {
    return TIMESTAMP;
  }


  /**
   * Sets the value of the 'TIMESTAMP' field.
   * @param value the value to set.
   */
  public void setTIMESTAMP(java.lang.CharSequence value) {
    this.TIMESTAMP = value;
  }

  /**
   * Creates a new OrderActionAck RecordBuilder.
   * @return A new OrderActionAck RecordBuilder
   */
  public static org.hifly.saga.payment.model.OrderActionAck.Builder newBuilder() {
    return new org.hifly.saga.payment.model.OrderActionAck.Builder();
  }

  /**
   * Creates a new OrderActionAck RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderActionAck RecordBuilder
   */
  public static org.hifly.saga.payment.model.OrderActionAck.Builder newBuilder(org.hifly.saga.payment.model.OrderActionAck.Builder other) {
    if (other == null) {
      return new org.hifly.saga.payment.model.OrderActionAck.Builder();
    } else {
      return new org.hifly.saga.payment.model.OrderActionAck.Builder(other);
    }
  }

  /**
   * Creates a new OrderActionAck RecordBuilder by copying an existing OrderActionAck instance.
   * @param other The existing instance to copy.
   * @return A new OrderActionAck RecordBuilder
   */
  public static org.hifly.saga.payment.model.OrderActionAck.Builder newBuilder(org.hifly.saga.payment.model.OrderActionAck other) {
    if (other == null) {
      return new org.hifly.saga.payment.model.OrderActionAck.Builder();
    } else {
      return new org.hifly.saga.payment.model.OrderActionAck.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrderActionAck instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderActionAck>
    implements org.apache.avro.data.RecordBuilder<OrderActionAck> {

    private java.lang.CharSequence TX_ID;
    private java.lang.CharSequence PARTICIPIANT_ID;
    private java.lang.CharSequence ORDER_ID;
    private java.lang.CharSequence TIMESTAMP;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.hifly.saga.payment.model.OrderActionAck.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.TX_ID)) {
        this.TX_ID = data().deepCopy(fields()[0].schema(), other.TX_ID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.PARTICIPIANT_ID)) {
        this.PARTICIPIANT_ID = data().deepCopy(fields()[1].schema(), other.PARTICIPIANT_ID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ORDER_ID)) {
        this.ORDER_ID = data().deepCopy(fields()[2].schema(), other.ORDER_ID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.TIMESTAMP)) {
        this.TIMESTAMP = data().deepCopy(fields()[3].schema(), other.TIMESTAMP);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing OrderActionAck instance
     * @param other The existing instance to copy.
     */
    private Builder(org.hifly.saga.payment.model.OrderActionAck other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.TX_ID)) {
        this.TX_ID = data().deepCopy(fields()[0].schema(), other.TX_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PARTICIPIANT_ID)) {
        this.PARTICIPIANT_ID = data().deepCopy(fields()[1].schema(), other.PARTICIPIANT_ID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ORDER_ID)) {
        this.ORDER_ID = data().deepCopy(fields()[2].schema(), other.ORDER_ID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.TIMESTAMP)) {
        this.TIMESTAMP = data().deepCopy(fields()[3].schema(), other.TIMESTAMP);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'TX_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getTXID() {
      return TX_ID;
    }


    /**
      * Sets the value of the 'TX_ID' field.
      * @param value The value of 'TX_ID'.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder setTXID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.TX_ID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'TX_ID' field has been set.
      * @return True if the 'TX_ID' field has been set, false otherwise.
      */
    public boolean hasTXID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'TX_ID' field.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder clearTXID() {
      TX_ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'PARTICIPIANT_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getPARTICIPIANTID() {
      return PARTICIPIANT_ID;
    }


    /**
      * Sets the value of the 'PARTICIPIANT_ID' field.
      * @param value The value of 'PARTICIPIANT_ID'.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder setPARTICIPIANTID(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.PARTICIPIANT_ID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'PARTICIPIANT_ID' field has been set.
      * @return True if the 'PARTICIPIANT_ID' field has been set, false otherwise.
      */
    public boolean hasPARTICIPIANTID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'PARTICIPIANT_ID' field.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder clearPARTICIPIANTID() {
      PARTICIPIANT_ID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ORDER_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getORDERID() {
      return ORDER_ID;
    }


    /**
      * Sets the value of the 'ORDER_ID' field.
      * @param value The value of 'ORDER_ID'.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder setORDERID(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ORDER_ID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ORDER_ID' field has been set.
      * @return True if the 'ORDER_ID' field has been set, false otherwise.
      */
    public boolean hasORDERID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ORDER_ID' field.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder clearORDERID() {
      ORDER_ID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'TIMESTAMP' field.
      * @return The value.
      */
    public java.lang.CharSequence getTIMESTAMP() {
      return TIMESTAMP;
    }


    /**
      * Sets the value of the 'TIMESTAMP' field.
      * @param value The value of 'TIMESTAMP'.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder setTIMESTAMP(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.TIMESTAMP = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'TIMESTAMP' field has been set.
      * @return True if the 'TIMESTAMP' field has been set, false otherwise.
      */
    public boolean hasTIMESTAMP() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'TIMESTAMP' field.
      * @return This builder.
      */
    public org.hifly.saga.payment.model.OrderActionAck.Builder clearTIMESTAMP() {
      TIMESTAMP = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderActionAck build() {
      try {
        OrderActionAck record = new OrderActionAck();
        record.TX_ID = fieldSetFlags()[0] ? this.TX_ID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.PARTICIPIANT_ID = fieldSetFlags()[1] ? this.PARTICIPIANT_ID : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ORDER_ID = fieldSetFlags()[2] ? this.ORDER_ID : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.TIMESTAMP = fieldSetFlags()[3] ? this.TIMESTAMP : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderActionAck>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderActionAck>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderActionAck>
    READER$ = (org.apache.avro.io.DatumReader<OrderActionAck>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.TX_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TX_ID);
    }

    if (this.PARTICIPIANT_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PARTICIPIANT_ID);
    }

    if (this.ORDER_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ORDER_ID);
    }

    if (this.TIMESTAMP == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TIMESTAMP);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.TX_ID = null;
      } else {
        this.TX_ID = in.readString(this.TX_ID instanceof Utf8 ? (Utf8)this.TX_ID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PARTICIPIANT_ID = null;
      } else {
        this.PARTICIPIANT_ID = in.readString(this.PARTICIPIANT_ID instanceof Utf8 ? (Utf8)this.PARTICIPIANT_ID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ORDER_ID = null;
      } else {
        this.ORDER_ID = in.readString(this.ORDER_ID instanceof Utf8 ? (Utf8)this.ORDER_ID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TIMESTAMP = null;
      } else {
        this.TIMESTAMP = in.readString(this.TIMESTAMP instanceof Utf8 ? (Utf8)this.TIMESTAMP : null);
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TX_ID = null;
          } else {
            this.TX_ID = in.readString(this.TX_ID instanceof Utf8 ? (Utf8)this.TX_ID : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PARTICIPIANT_ID = null;
          } else {
            this.PARTICIPIANT_ID = in.readString(this.PARTICIPIANT_ID instanceof Utf8 ? (Utf8)this.PARTICIPIANT_ID : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ORDER_ID = null;
          } else {
            this.ORDER_ID = in.readString(this.ORDER_ID instanceof Utf8 ? (Utf8)this.ORDER_ID : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TIMESTAMP = null;
          } else {
            this.TIMESTAMP = in.readString(this.TIMESTAMP instanceof Utf8 ? (Utf8)this.TIMESTAMP : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










