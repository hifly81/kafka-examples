apiVersion: v1
kind: Template
metadata:
  name: kafka-sample-producers
  annotations:
    openshift.io/display-name: kafka-sample-producers Template
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: liberty,kafka
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: Ansible
    labels:
      app: ${APP}
    name: ${APP}
  spec:
    ports:
    - name: 9080-tcp
      port: 9080
      protocol: TCP
      targetPort: 9080
    - name: 9443-tcp
      port: 9443
      protocol: TCP
      targetPort: 9443
    selector:
      app: ${APP}
      deploymentconfig: ${APP}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP}
    name: ${APP}
  spec:
    port:
      targetPort: 9080-tcp
    to:
      kind: Service
      name: ${APP}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP}
    name: ${APP}-secure
  spec:
    port:
      targetPort: 9443-tcp
    tls:
      termination: passthrough
    to:
      kind: Service
      name: ${APP}
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2018-10-03T16:49:27Z
    name: ${APP}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: ${DOCKER_IMAGE}:${TAG}
      generation: 1
      importPolicy:
        insecure: true
      name: ${TAG}
      referencePolicy:
        type: Source
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: Ansible
    labels:
      app: ${APP}
    name: ${APP}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP}
      deploymentconfig: ${APP}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {
        }
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: Ansible
        creationTimestamp: null
        labels:
          app: ${APP}
          deploymentconfig: ${APP}
      spec:
        containers:
        - image: ${APP}:${TAG}
          imagePullPolicy: IfNotPresent
          name: ${APP}
          env:
            - name: kafka.broker.list
              valueFrom:
                configMapKeyRef:
                  name: {APP}-cm
                  key: kafka.broker.list
          ports:
          - containerPort: 9080
            protocol: TCP
          - containerPort: 9443
            protocol: TCP
          resources: 
            requests:
              cpu: "500m"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config/jvm.options
            name: ${APP}-volume
            subPath: jvm.options
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {
          }
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: jvm.options
              path: jvm.options
            name: ${APP}-cm
          name: ${APP}-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP}
        from:
          kind: ImageStreamTag
          name: ${APP}:${TAG}
      type: ImageChange
parameters:
- description: App name
  name: APP
  required: true
- description: Image
  name: DOCKER_IMAGE
  required: true
- description: TAG
  name: TAG
  required: true